{"version":3,"sources":["App.js","registerServiceWorker.js","components/Login.js","components/Register.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","localStorage","removeItem","window","location","reload","state","articles","_this2","axios","defaults","headers","common","getItem","get","then","res","setState","data","console","log","catch","error","response","status","history","push","react_default","a","createElement","class","onClick","map","article","Link","to","concat","_id","isbn","title","author","Component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","checkValidServiceWorker","event","request","url","Login","onChange","e","target","name","value","onSubmit","preventDefault","_this$state","username","password","post","result","setItem","token","message","_this$state2","role","for","type","placeholder","required","aria-hidden","Create","ReactDOM","render","BrowserRouter","Route","exact","path","component","Register","document","getElementById"],"mappings":"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","file":"static/js/main.11b60995.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      articles: [],\n    };\n  }\n\n  componentDidMount() {\n    axios.defaults.headers.common['Authorization'] = localStorage.getItem('jwtToken');\n    axios\n      .get('/api/article')\n      .then(res => {\n        this.setState({ articles: res.data });\n        console.log(this.state.articles);\n      })\n      .catch(error => {\n        if (error.response.status === 401) {\n          this.props.history.push('/login');\n        }\n      });\n  }\n\n  logout = () => {\n    localStorage.removeItem('jwtToken');\n    window.location.reload();\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              ARTICLE CATALOG &nbsp;\n              {localStorage.getItem('jwtToken') && (\n                <button class=\"btn btn-primary\" onClick={this.logout}>\n                  Logout\n                </button>\n              )}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <table class=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>ISBN</th>\n                  <th>Title</th>\n                  <th>Author</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.articles.map(article => (\n                  <tr>\n                    <td>\n                      <Link to={`/show/${article._id}`}>{article.isbn}</Link>\n                    </td>\n                    <td>{article.title}</td>\n                    <td>{article.author}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n\n    window.addEventListener('fetch', event => {\n      if (event.request.url.match('^.*(/api/).*$')) {\n        return false;\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nexport default register;\n","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n    };\n  }\n  onChange = e => {\n    const state = this.state;\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    axios\n      .post('/api/auth/login', { username, password })\n      .then(result => {\n        localStorage.setItem('jwtToken', result.data.token);\n        this.setState({ message: '' });\n        this.props.history.push('/');\n      })\n      .catch(error => {\n        if (error.response.status === 401) {\n          this.setState({ message: 'Login failed. Username or password not match' });\n        }\n      });\n  };\n\n  render() {\n    const { username, password, message } = this.state;\n    return (\n      <div class=\"container\">\n        <form class=\"form-signin\" onSubmit={this.onSubmit}>\n          {message !== '' && (\n            <div class=\"alert alert-warning alert-dismissible\" role=\"alert\">\n              {message}\n            </div>\n          )}\n          <h2 class=\"form-signin-heading\">Please sign in</h2>\n          <label for=\"inputEmail\" class=\"sr-only\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            placeholder=\"Email address\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            required\n          />\n          <label for=\"inputPassword\" class=\"sr-only\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            required\n          />\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n            Login\n          </button>\n          <p>\n            Not a member?{' '}\n            <Link to=\"/register\">\n              <span class=\"glyphicon glyphicon-plus-sign\" aria-hidden=\"true\" /> Register here\n            </Link>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n// import ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Login.css';\n\nclass Create extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n    };\n  }\n  onChange = e => {\n    const state = this.state;\n    state[e.target.name] = e.target.value;\n    this.setState(state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { username, password } = this.state;\n\n    axios.post('/api/auth/register', { username, password }).then(result => {\n      this.props.history.push('/login');\n    });\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <div class=\"container\">\n        <form class=\"form-signin\" onSubmit={this.onSubmit}>\n          <h2 class=\"form-signin-heading\">Register</h2>\n          <label for=\"inputEmail\" class=\"sr-only\">\n            Email address\n          </label>\n          <input\n            type=\"email\"\n            class=\"form-control\"\n            placeholder=\"Email address\"\n            name=\"username\"\n            value={username}\n            onChange={this.onChange}\n            required\n          />\n          <label for=\"inputPassword\" class=\"sr-only\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            class=\"form-control\"\n            placeholder=\"Password\"\n            name=\"password\"\n            value={password}\n            onChange={this.onChange}\n            required\n          />\n          <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n            Register\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Create;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n// import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n// import '../node_modules/bootstrap/dist/css/bootstrap-theme.min.css';\nimport './index.css';\nimport App from './App';\nimport register from './registerServiceWorker';\nimport Login from './components/Login.js';\nimport Register from './components/Register';\n\nReactDOM.render(\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </div>\n  </Router>,\n  document.getElementById('root')\n);\nregister();\n"],"sourceRoot":""}